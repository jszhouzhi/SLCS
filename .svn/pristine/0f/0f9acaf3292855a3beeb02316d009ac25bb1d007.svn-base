package com.slzr.operation.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.slzr.common.controller.BaseController;
import com.slzr.common.utils.PageUtils;
import com.slzr.common.utils.Query;
import com.slzr.common.utils.R;
import com.slzr.operation.domain.DailysummarySettleDO;
import com.slzr.operation.domain.DailysummaryTopupDO;
import com.slzr.operation.service.DailysummaryTopupService;


@Controller
@RequestMapping("/operation/topup")
public class DailysummaryTopupController extends BaseController{
	private String prefix = "operation/topup";
	@Autowired
	private DailysummaryTopupService topupservice;
	
	@GetMapping("/list")
	public String list() {
		return prefix + "/list";
	}
	
	@GetMapping("/edit/{id}")
	public String edit(@PathVariable("id") String id) {
		return prefix + "/edit";
	}
	
	@GetMapping("/check/{id}")
	public String check(Model model,@PathVariable("id") String id) {
		model.addAttribute("id",id);
		return prefix + "/check";
	}
	
	@ResponseBody
	@GetMapping("api/list")
	@RequiresPermissions("operation:topup:list")
	public PageUtils list(@RequestParam Map<String, Object> params) {
		//查询列表数据
        Query query = new Query(params);
		List<DailysummaryTopupDO> list = topupservice.list(query);
		int total = topupservice.count(query);
		PageUtils pageUtils = new PageUtils(list, total);
		return pageUtils;
	}
	
	@ResponseBody
	@RequestMapping("api/check")
	@RequiresPermissions("operation:topup:check")
	public R apicheck(String id,int auditvalue,String remark){
		DailysummaryTopupDO settledo = topupservice.get(id);
		if(settledo.getAuditStatus()==-1)
		{
			topupservice.updateAudit(id, auditvalue, this.getUserId().intValue(),remark);
			return R.ok();
		}
        return R.error();
	}
	
	@ResponseBody
	@RequestMapping("api/again")
	@RequiresPermissions("operation:topup:do")
	public R apiagain(String id){
		topupservice.updateAudit(id, -1, this.getUserId().intValue(),"");
		return R.ok();
	}
}
